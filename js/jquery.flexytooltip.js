//===========================================================
//    jQuery flexytooltip v1.0
//    By: Seyed Ehsan Mohamadi
//    Email: ehsan8020@gmail.com    
//===========================================================

; $.fn.tooltip = function (content, options) { var defaults = { mouseMode: true, focusMode: false, appearEffect: 'fade', appearSpeed: 'normal', disappearEffect: 'fade', disappearSpeed: 'normal', opacity: 0.8, appearDelay: 0, disappearDelay: 0, position: [10, 10], positionIsFixed: false, appearFlash: true, appearFlashColor: 'White', appearFlashInterval: 100, appearFlashCount: 2, disappearFlash: true, disappearFlashColor: 'White', disappearFlashInterval: 100, disappearFlashCount: 2, beforeAppear: function () { }, appearCompleted: function () { }, appearFlashCompleted: function () { }, beforeDisappear: function () { }, disappearCompleted: function () { }, disappearFlashCompleted: function () { } }; var options = $.extend(defaults, options); if (options.disappearSpeed < (options.disappearFlashCount * options.disappearFlashInterval)) { options.disappearFlashInterval = options.disappearSpeed / options.disappearFlashCount; } return this.each(function () { var element = $(this); var tooltipDiv = document.createElement('div'); $(tooltipDiv).addClass('flexytooltip'); $(tooltipDiv).append(content); $(document.body).append(tooltipDiv); var mainColor = $(tooltipDiv).css('backgroundColor'); $(tooltipDiv).css('opacity', options.opacity); if (options.mouseMode) { element.mouseover(function () { setTimeout(function () { typeof (options.beforeAppear) == 'function' ? options.beforeAppear() : null; doAppear(); }, options.appearDelay); if (options.positionIsFixed) { setFixedPosition(); } }); element.mouseleave(function () { setTimeout(function () { typeof (options.beforeDisappear) == 'function' ? options.beforeDisappear() : null; doDisappear(); }, options.disappearDelay); }); if (!options.positionIsFixed) { element.mousemove(function (event) { var topPos = event.pageY; var leftPos = event.pageX; $(tooltipDiv).css({ top: topPos + options.position[0], left: leftPos + options.position[1] }); }); } } if (options.focusMode) { element.focus(function () { setTimeout(function () { typeof (options.beforeAppear) == 'function' ? options.beforeAppear() : null; doAppear(); }, options.appearDelay); setFixedPosition(); }); element.blur(function () { setTimeout(function () { typeof (options.beforeDisappear) == 'function' ? options.beforeDisappear() : null; doDisappear(); }, options.disappearDelay); }); } function doAppear() { switch (options.appearEffect) { case 'fade': $(tooltipDiv).fadeIn(options.appearSpeed, function () { typeof (options.appearCompleted) == 'function' ? options.appearCompleted() : null; }); break; case 'show': $(tooltipDiv).show(options.appearSpeed, function () { typeof (options.appearCompleted) == 'function' ? options.appearCompleted() : null; }); break; case 'slide': $(tooltipDiv).slideDown(options.appearSpeed, function () { typeof (options.appearCompleted) == 'function' ? options.appearCompleted() : null; }); break; case 'none': $(tooltipDiv).css({ display: 'block' }); typeof (options.appearCompleted) == 'function' ? options.appearCompleted() : null; break; default: $(tooltipDiv).fadeIn(options.appearSpeed, function () { typeof (options.appearCompleted) == 'function' ? options.appearCompleted() : null; }); break; } if (options.appearFlash) { var appearFlashFlag = false; var appearFlashThreshold = options.appearFlashCount * 2; var appearFC = 0; function appearFlash() { if (appearFC < appearFlashThreshold) { if (appearFlashFlag) { $(tooltipDiv).css({ backgroundColor: mainColor }); appearFlashFlag = false; } else { $(tooltipDiv).css({ backgroundColor: options.appearFlashColor }); appearFlashFlag = true; } appearFC++; } else { clearInterval(appearFlashIntervalID); typeof (options.appearFlashCompleted) == 'function' ? options.appearFlashCompleted() : null; } } var appearFlashIntervalID = setInterval(function () { appearFlash(); }, options.appearFlashInterval / 2); } } function doDisappear() { switch (options.disappearEffect) { case 'fade': $(tooltipDiv).fadeOut(options.disappearSpeed, function () { typeof (options.disappearCompleted) == 'function' ? options.disappearCompleted() : null; }); break; case 'show': $(tooltipDiv).hide(options.disappearSpeed, function () { typeof (options.disappearCompleted) == 'function' ? options.disappearCompleted() : null; }); break; case 'slide': $(tooltipDiv).slideUp(options.disappearSpeed, function () { typeof (options.disappearCompleted) == 'function' ? options.disappearCompleted() : null; }); break; case 'none': $(tooltipDiv).css({ display: 'none' }); typeof (options.disappearCompleted) == 'function' ? options.disappearCompleted() : null; break; default: $(tooltipDiv).fadeOut(options.disappearSpeed, function () { typeof (options.disappearCompleted) == 'function' ? options.disappearCompleted() : null; }); break; } if (options.disappearFlash) { var disappearFlashFlag = false; var disappearFlashThreshold = options.disappearFlashCount * 2; var disappearFC = 0; function disappearFlash() { if (disappearFC < disappearFlashThreshold) { if (disappearFlashFlag) { $(tooltipDiv).css({ backgroundColor: mainColor }); disappearFlashFlag = false; } else { $(tooltipDiv).css({ backgroundColor: options.disappearFlashColor }); disappearFlashFlag = true; } disappearFC++; } else { clearInterval(disappearFlashIntervalID); typeof (options.disappearFlashCompleted) == 'function' ? options.disappearFlashCompleted() : null; } } var disappearFlashIntervalID = setInterval(function () { disappearFlash(); }, options.disappearFlashInterval / 2); } } function setFixedPosition() { var topPos = element.offset().top; var leftPos = element.offset().left; $(tooltipDiv).css({ top: topPos + options.position[0], left: leftPos + options.position[1] }); } }); };


